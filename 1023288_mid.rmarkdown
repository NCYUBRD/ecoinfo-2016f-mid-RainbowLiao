---
title: "1023288_mid.rmarkdown"
author: "廖凱鋐"
date: "2016年11月22日"
output: html_document
setwd('D:/凱/生態資訊/')
---
# 期中考題
#
## 一. 請隨機產生 10000 組正整數儲存成 vector 格式，並輸出成 random10k.csv (5%)
```{r Q1, message=FALSE, warning=FALSE}
### use 'sample.int' to create 10000 positive integer. And use 'write.table' to output

Q1 <- c(sample.int(n = 10000))

write.table(Q1, file = "random10k.csv", sep = "," , row.names = F)

```
#
#
## 二. 請使用 for 迴圈列出 15 個費布納西(Fibonacci)數列 (10%)
```{r Q2, message=FALSE, warning=FALSE}
### deside n, f1, f2 first and write 'for'

n <- 15
fib <- numeric(n)
fib[1] <- 1
fib[2] <- 1

for (x in 3:n) {
  fib[x]= fib[x-1] + fib[x-2]
}

fib

```
#
#
## 三. 請將 sample_data.txt 輸入進 R 內，並完成以下計算 (55%)
```{r Q3, message=FALSE, warning=FALSE}
### lib 'data.tabe' first, and use 'fread' @@clean data first
library(data.table)

Q3_data <- fread('D:/凱/生態資訊/data/ecoinfo2016fm-master/sample_data.txt', sep = ' ',  na.strings = c('-9991','-9995','-9996','-9997','-9998','-9999'))

head(Q3_data)

```
#
### (a) 將 yyyymmddhh 轉成 POSIXct 時間戳記格式， 並新增為一個欄(variable)，命名為 timestamp。並將此 sample data 輸出為 sample_data_parsed.csv (以逗號分隔，具有欄位名稱)
```{r Q3-a, message=FALSE, warning=FALSE}
#### create a variable: data[, timestamps:=as.POSIXct(strptime(yyyymmddhh,'%Y%m%d%H'))]
#### And output 

Q3_data[,timestamp:=as.POSIXct(strptime(yyyymmddhh-1,'%Y%m%d%H'))]

write.table(Q3_data, file = "sample_data_parsed.csv", sep = ",", col.names = T, row.names = F)

head(Q3_data)

```

#
### (b) 請計算 2014 年至 2015 年這個測站的每月平均氣溫(mean_MTP)、每月平均濕度(mean_MW)、每月累積降水(sum_MR)，並用表格呈現。備註：TX01: 溫度(ºC), RH01: 相對濕度(%), PP01: 降水量(mm)
```{r Q3-b, message=FALSE, warning=FALSE}
library(dplyr)

##### 新增'年'與'日'的時間標記以便後續計算

Q3_data[, day:= format.Date(timestamp, '%Y-%m-%d')] 

Q3_data[, month:= format.Date(timestamp, '%Y-%m')]

Q3_data[, year:= format.Date(timestamp, '%Y')]

Q3_data[, mon:= format.Date(timestamp, '%m')]

Q3_data[, date:= format.Date(timestamp, '%d')]

Q3_data[, mon_day:= format.Date(timestamp, '%m-%d')]


#### 將表格轉換為'tbl'

tbl_Q3_data <- tbl_df(Q3_data)

#### 將月份綁起來(group_by)

by_month_b <- group_by(tbl_Q3_data, mon)

#### 以'summarise'做各項計算

mean_MTP <- summarise(by_month_b, Tavg = mean(as.numeric(TX01), na.rm = T ))

mean_MW <- summarise(by_month_b, Wavg = mean(as.numeric(RH01), na.rm = T ))

sum_MR <- summarise(by_month_b, Rsum = sum(as.numeric(PP01), na.rm = T ))


#### 將三個表格cbind 並改colname 與 trans

Q3_sheet <- tbl_df(cbind.data.frame(mean_MTP, mean_MW$Wavg, sum_MR$Rsum))

col_name <- c("month", "Tavg", "Wavg", "Rsum")

setnames(Q3_sheet, col_name)

Q3_b <- t(Q3_sheet)


```
#
### (c) 請計算 2014 年和 2015 年最冷月分別是在哪個月份？(提示：先計算月均溫)
```{r Q3-c, message=FALSE, warning=FALSE}

#### 排序 'arrange'

arrange_MT <- arrange(Q3_sheet, Tavg)

Q3_c <- arrange_MT[1:2,1:2]

### 2014-01, 2015-01 coldest

```
#
### (d) 在 2015 年最冷的那個月份中，該月中每日的最低溫平均是幾度C？
```{r Q3-d, message=FALSE, warning=FALSE}
#### 把"月" , "日" 包起來，先算每一天的最低溫

by_month_day_d <- group_by(tbl_Q3_data, month, day)

min_DTP <- summarise(by_month_day_d, coldest_d = min(TX01, na.rm = T))


#### 在把上表的"月"包起來，算平均，最後過濾"2015-01"
by_month_d <- group_by(min_DTP, month)

mean_min_DTP <- summarise(by_month_d, mean_coldest_d = mean(coldest_d, na.rm = T))

Q3_d <- filter(mean_min_DTP, month == '2015-01')

```

#
### (e) 請計算 2014 年和 2015 年中，最熱的月分別是在哪個月份？
```{r Q3_e, message=FALSE, warning=FALSE}
#### 呈c

Q3_e <- arrange_MT[23:24, 1:2]

```
#
### (f) 請計算 2014 年最熱的月份中，該月的每日最高溫平均為幾度C?
```{r Q3_f, message=FALSE, warning=FALSE}
max_DTP <- summarise(by_month_day_d, hotest_d = max(TX01, na.rm = T))

by_month_f <- group_by(max_DTP, month)

mean_max_DTP <- summarise(by_month_f, mean_hotest_d = mean(hotest_d, na.rm = T))

Q3_f <- filter(mean_max_DTP, month == '2014-07')

```
#
### (g) 請算出 2014 至 2015 年中，最濕月份的平均溫度
```{r Q3_g, message=FALSE, warning=FALSE}

#### 排序mean_MW來看兩年最濕的月份

arrange(mean_MW, -Wavg)

#### 可得 8 月 最濕

#### 接著找尋這兩個月份的平均溫度

sum_TP <- summarise(by_month_b, MTP = mean(TX01, na.rm = T))

Q3_g <- filter(sum_TP, mon == '08')  

### 可得2014-09 為 28.758 , 2015-08 為 27.828 
```
#
### (h) 請計算每個月的月溫差(每月最高溫減去每月最低溫，取兩年平均)，平均月溫差最大的是哪個月？
```{r Q3_h, message=FALSE, warning=FALSE}

#### 先將'年月日'綁起來，計算每年每月日均溫，在尋找每月的最大最小為誰，最後利用mutate運算

by_yr_mon_day_h <- group_by(tbl_Q3_data, year, month, day)

everyday_mean <- summarise(by_yr_mon_day_h, day_mean_TP = mean(TX01, na.rm = T))

by_yr_mon_h <- group_by(everyday_mean, year, month)
everyday_max_min_TP <- summarise_all(by_yr_mon_h, funs(min, max))

Mon_TP_DF <- mutate(everyday_max_min_TP, df = day_mean_TP_max - day_mean_TP_min)
mean_Mon_TP_DF <- (Mon_TP_DF[1:12,7] + Mon_TP_DF[13:24,7])/2

### from mean_Mon_TP_DF can see Feb is max.

Q3_h <- 'Feb, 10.498913 degree'

```
#
### (i) 請計算這兩年的年溫差平均(每年最高溫減去最低溫)
```{r Q3_i, message=FALSE, warning=FALSE}
#### 同3-h 作法，將'年月'綁起來做'平均'後，找'極值'在找'差值' ，最後將兩年平均可得

by_yr_mon_i <- group_by(tbl_Q3_data, year, month)
mean_MTP_by_yr <- summarise(by_yr_mon_i, Tavg_per_yr = mean(as.numeric(TX01), na.rm = T ))

by_yr_i <- group_by(mean_MTP_by_yr, year)
MTP_max_min_per_yr <- summarise_all(by_yr_i, funs(min, max))
Mon_TP_DF_per_yr <- mutate(MTP_max_min_per_yr, df = Tavg_per_yr_max - Tavg_per_yr_min)

yr_TP_DF <- summarise(Mon_TP_DF_per_yr, mean_df= mean(df, na.rm = T ))

Q3_i <- yr_TP_DF

```
#
###(j) 溫量指數(warmth index)是 Kira (1945) 提出的一個生態氣候指標，其計算方式為:
####  (1) 若該月均溫高於 5 ºC，則將該月份的月均溫減去 5 ºC。
####  (2) 若該月均溫低於或等於 5 ºC，則令其為 0 ºC
####  (3) 將所有減去 5 ºC 或當成 0 ºC 的月均溫相加起來得到的數據稱為「溫量指數」

###  請根據 (b) 所計算出的數值，算出 2014 至 2015年的溫量指數
```{r Q3_j, message=FALSE, warning=FALSE}
#### 先回顧一下Q3_sheet，用mutate計算並設計條件判斷，最後加總可得溫量指數
Q3_sheet

Warmth_index <- mutate(Q3_sheet, warmth_index = 
  if (Tavg > 5.00000) {Tavg -5}

  else if (Tavg <= 5.00000) {Tavg = 0}
)

Q3_j <- summarise(Warmth_index, Warmth_index_sum = sum(as.numeric(warmth_index)))

```
#
### (k) 請使用 climatol package 繪製 2014 至 2015 的生態氣候圖(Ecological climate diagrams)。 提示：你需要計算出每個月的累積降水平均、每日最高溫平均、每日最低溫平均、每月絕對最低溫。
```{r Q3_k, message=FALSE, warning=FALSE}

#### 兩年每月累積降水平均(用有趣的方法~)

by_year_mon_month_k <- group_by(tbl_Q3_data, year, mon, month)

mon_sum_R_per_yr <- summarise(by_year_mon_month_k, sumR_per_yr = sum(PP01, na.rm = T))

by_year_mon_k <- group_by(mon_sum_R_per_yr, year, mon)

mean_yr_sumR <- summarise(by_year_mon_k, mean_sumR = mean(sumR_per_yr, na.rm = T))

#### 迴圈形式test

##### summarise_all(filter(mean_yr_sumR, mon == mon_c[i])[,3], mean_omit_na)

##### test_1 <- summarise_all(filter(mean_yr_sumR, mon == mon_c[1])[,3], mean_omit_na)

##### test_2 <- summarise_all(filter(mean_yr_sumR, mon == mon_c[2])[,3], mean_omit_na)

##### test_3 <- summarise_all(filter(mean_yr_sumR, mon == mon_c[3])[,3], mean_omit_na)

##### rbind(test_1, test_2, test_3)

mon_c <- c("01","02","03","04","05","06","07","08","09","10","11","12")

mean_omit_na <- function(x){
  x <- as.numeric(x)
  return(mean(x, na.rm = T))
} 

value.list <- vector("list", 12)
  
  for (i in 1:12) {
    
   values <- summarise_all(filter(mean_yr_sumR, mon == mon_c[i])[,3], mean_omit_na)
    
    value.list[[i]] <- values
  }

mean_MsumR_per_yr <- do.call(rbind, value.list)


#### 兩年每月每日最高溫平均 

by_mon_date <- group_by(tbl_Q3_data, mon, date)

MTP_max_per <- summarise(by_mon_date, dTP_max = mean(TX01, na.rm = T))

by_mon_max <- group_by(MTP_max_per, mon)

MTP_max_per_yr <- summarise(by_mon_max, mean_mTP_max = max(dTP_max, na.rm = T))

#### 兩年每月每日最低溫平均

MTP_min_per <- summarise(by_mon_date, dTP_min = mean(TX01, na.rm = T))

by_mon_min <- group_by(MTP_min_per, mon)

MTP_min_per_yr <- summarise(by_mon_min, mean_mTP_min = min(dTP_min, na.rm = T))

#### 兩年每月絕對(Absolute)最低溫

##### 先綁'月-天', '月', 'timestamp'找出每'天'最小值，在綁前兩個， 計算哪一天是最小值

min_omit_na <- function(x){
  x <- as.numeric(x)
  return(min(x, na.rm = T))
} 

by_monday_ab1 <- group_by(tbl_Q3_data, mon_day, mon, timestamp)

Amin_TP <- summarise(by_monday_ab1, Amin_TP = min(TX01, na.rm = T))

by_monday_ab2 <- group_by(Amin_TP, mon_day, mon)

Amin_TP_per_yr <- summarise(by_monday_ab2, Amin_Tp = min(Amin_TP, na.rm = T))

##### 以迴圈的方法過濾並計算

AminTP_value.list <- vector("list", 12)
  
  for (m in 1:12) {
    
   AminTP_value <- summarise_all(filter(Amin_TP_per_yr, mon == mon_c[m])[,3], min_omit_na)
    
    AminTP_value.list[[m]] <- AminTP_value
  }

Abmin_MTP_per_yr <- do.call(rbind, AminTP_value.list)

#### 最後將所有元素cbind

Q3_k_sheet_1 <- cbind.(MTP_min_per_yr$mon,mean_MsumR_per_yr,MTP_max_per_yr$mean_mTP_max,MTP_min_per_yr$mean_mTP_min,Abmin_MTP_per_yr)

K_colnames <- c("month", "sumR", "MaxTP", "minTP", "AmintP")

Q3_k_sheet <- t(setnames(Q3_k_sheet_1, K_colnames))

write.table(Q3_k_sheet, file = "diag_data.csv", sep = "," , col.names = F)

##---------------------------------------------------------------------------------

#### 畫圖範例
###### 設定工作目錄
#setwd('/Users/psilotum/Documents/Dropbox/Courses/植群生態學/climatic_diagram/')
# 設定字型，這裡使用 Noto Sans T Chinese
#CairoFonts(regular = "Noto Sans T Chinese:style=Light", bold = "Noto Sans T Chinese:style=Regular")
#par(family='Noto Sans T Chinese')

# custom function to draw climatic diagrams
#exportEcoDiag <- function(climfile, station_name, filename, elevation, data_period) {
#  climdata <- read.csv(climfile, row.names = 1)  
#  Cairo(1600, 1600, file=filename, type="png", bg="white", dpi=300)
#  diagwl(climdata, est=station_name, 
#         alt=elevation, per=data_period)
#  dev.off()
#}

# Zonobiome I
#exportEcoDiag('Congo_Kisangami.csv', 'Kisangami (Congo)', 'ZB1-Kisangami.png', '447', '2010')
##---------------------------------------------------------------------------------

### 以下為畫圖過程

library(climatol)
library(Cairo)

CairoFonts(regular = "Noto Sans T Chinese:style=Light", bold = "Noto Sans T hinese:style=Regular")
par(family='Noto Sans T Chinese')

# custom function to draw climatic diagrams

climatol_Diag_plot <- function(station_name, filename, data_period) {

  diagdata <- read.csv('D:/凱/生態資訊/diag_data.csv', row.names = 1)  

  diagname <- c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec")

  setnames(diagdata, diagname)

  #filename = 'a.png'
  #station_name = 'un'
  #data_period = '2014-2015'
  
  Cairo(1600, 1600, file= filename, type="png", bg="white", dpi=300)
  #png(filename, width = 800, height=800, pointsize = 14)
    diagwl(diagdata, est= station_name, alt = " ", per= data_period )
  dev.off()
}

#Zonobiome I

climatol_Diag_plot("un","climatol_diag.png", "2014-15")


```
#
#
## 四. 請計算 Table 2 中的下列各子題 (30%)
#
### (a) 請計算各島環境因子(total_cover, C, EC, ..., etc.) 的平均、 第一四分位數、中位數、第三四分位數、最大值及最小值以及標準差，並整理成如下表格：
```{r}

#### 讀取該csv時發現亂碼，因為編碼問題，故使用'read.table', 並設定fileEncoding = "UTF-8"

tbl_Q4_data <- tbl_df(read.table('D:/凱/生態資訊/data/ecoinfo2016fm-master/penghu_env.csv', header = T, fileEncoding = "UTF-8", sep = ","))


#### 第一題不用plotid所以先刪掉

except_plotid <- select(tbl_Q4_data, -plotid)

#### 以島嶼做基點計算其他因子的變化
by_islands <- group_by(except_plotid, island)

library(tidyr)

#### funs
{

max_omit_na <- function(x){
  x <- as.numeric(x)
  return(max(x, na.rm = T))
} 

min_omit_na <- function(x){
  x <- as.numeric(x)
  return(min(x, na.rm = T))
} 
  
q1 <- function(x){
  x <- as.numeric(x)
  return(quantile(x, 0.25, na.rm = T))
}

q2 <- function(x){
  x <- as.numeric(x)
  return(quantile(x, 0.50, na.rm = T))
}  

q3 <- function(x){
  x <- as.numeric(x)
  return(quantile(x, 0.75, na.rm = T))
} 


sd_omit_na <- function(x){
  x <- as.numeric(x)
  return(sd(x, na.rm = T))
} 
}

#### calculate mean_omit_na, q1, q2, q3, max_omit_na, min_omit_na, sd_omit_na

Q4_data_calculate <- summarise_all(by_islands, funs(mean_omit_na, q1, q2, q3, max_omit_na, min_omit_na, sd_omit_na))

#### separate 7 factors into 7 tables, rename, gather 

Q4_colname <- c("island","total_cover", "C", "EC", "K", "Na", "N", "rock_ratio" )

##### mean
{
Q4_data_mean <- select(Q4_data_calculate, island:rock_ratio_mean_omit_na )
setnames(Q4_data_mean, Q4_colname )
by_island_mean <- group_by(Q4_data_mean, island)
Q4_data_mean_sort <- gather(by_island_mean, factor, mean,  total_cover:rock_ratio )
paste_mean <- paste(Q4_data_mean_sort$island, Q4_data_mean_sort$factor, sep = ',' )
}

##### q1
{
Q4_data_q1 <- select(Q4_data_calculate, island,total_cover_q1:rock_ratio_q1 )
setnames(Q4_data_q1, Q4_colname )
by_island_q1 <- group_by(Q4_data_q1, island)
Q4_data_q1_sort <- gather(by_island_q1, factor, q1,  total_cover:rock_ratio )
}

##### q2
{
Q4_data_q2 <- select(Q4_data_calculate, island,total_cover_q2:rock_ratio_q2 )
setnames(Q4_data_q2, Q4_colname )
by_island_q2 <- group_by(Q4_data_q2, island)
Q4_data_q2_sort <- gather(by_island_q2, factor, q2,  total_cover:rock_ratio )
}

##### q3
{
Q4_data_q3 <- select(Q4_data_calculate, island,total_cover_q3:rock_ratio_q3 )
setnames(Q4_data_q3, Q4_colname )
by_island_q3 <- group_by(Q4_data_q3, island)
Q4_data_q3_sort <- gather(by_island_q3, factor, q3,  total_cover:rock_ratio )
}

##### max
{
Q4_data_max <- select(Q4_data_calculate, island,total_cover_max_omit_na:rock_ratio_max_omit_na )
setnames(Q4_data_max, Q4_colname )
by_island_max <- group_by(Q4_data_max, island)
Q4_data_max_sort <- gather(by_island_max, factor, max,  total_cover:rock_ratio )
}

##### min
{
Q4_data_min <- select(Q4_data_calculate, island,total_cover_min_omit_na:rock_ratio_min_omit_na )
setnames(Q4_data_min, Q4_colname )
by_island_min <- group_by(Q4_data_min, island)
Q4_data_min_sort <- gather(by_island_min, factor, min,  total_cover:rock_ratio )
}

##### sd
{
Q4_data_sd <- select(Q4_data_calculate, island,total_cover_sd_omit_na:rock_ratio_sd_omit_na )
setnames(Q4_data_sd, Q4_colname )
by_island_sd <- group_by(Q4_data_sd, island)
Q4_data_sd_sort <- gather(by_island_sd, factor, sd,  total_cover:rock_ratio )
}

#### cbind the col which Q4 needed, rename in "island,total_cover", "Mean", "Q1", "Mid", "Q3", "Max", "Min", "Sd"

Q4_sheet <- cbind.data.frame(paste_mean, Q4_data_mean_sort$mean, Q4_data_q1_sort$q1, Q4_data_q2_sort$q2, Q4_data_q3_sort$q3, Q4_data_max_sort$max, Q4_data_min_sort$min, Q4_data_sd_sort$sd)

Q4_rename <- c("island,total_cover", "Mean", "Q1", "Mid", "Q3", "Max", "Min", "Sd" )
setnames(Q4_sheet, Q4_rename )

Q4_a <- Q4_sheet


```
#
### (b) 請分別列出 C, EC, K, Na, N 最高的五個樣區(plotid)
```{r}

tbl_Q4_data

#### 刪掉用不到的行，再直接列出有個因子最大值的那一列

except_island_total_rock <- select(tbl_Q4_data, -island, -total_cover, -rock_ratio)

C_max_plotid <- top_n(except_island_total_rock, 1, C)[1,1]

EC_max_plotid <- top_n(except_island_total_rock, 1, EC)[1,1]  

K_max_plotid <- top_n(except_island_total_rock, 1, K)[1,1]

Na_max_plotid <- top_n(except_island_total_rock, 1, Na)[1,1]

N_max_plotid <- top_n(except_island_total_rock, 1, N)[1,1]

```

